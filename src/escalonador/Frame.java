/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package escalonador;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JProgressBar;

/**
 *
 * @author NataN-PC
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    
    private static int N = 4;
    private Estados est;
    private Processo bufferExecutando;
    private int quantum;
    private int inicio;
    private Processo p1;
    private Processo p2;
    private Processo p3;
    private Processo p4;
    private List<JProgressBar> barras = new ArrayList<JProgressBar>();
    
    public Frame() {
        initComponents();
        preencherCampos();
        criarProcessos();
        this.setLocationRelativeTo(null);
        this.setTitle("Trabalho S.O");
        
    }

    private void criarProcessos(){
        this.est = new Estados();
        
        this.barras.add(this.barrinhaA);
        this.barras.add(this.barrinhaB);
        this.barras.add(this.barrinhaC);
        this.barras.add(this.barrinhaD1);
        
        
      
        // contador nessa faixa para atribuição de char //PROGRAMA A////PROGRAMA B////PROGRAMA C////PROGRAMA D//
        for(int i = 65; i < 69; i++){
            this.est.bufferCriados.add(
                new Processo(
                        ("Programa "+(char)i),
                        (new Random().nextInt(99) + 1),
                        0,
                        this.barras.get(i-65))
            );
       
        }
        
        
        this.est.bufferProntos = this.est.bufferCriados;
        
        this.quantum = new Random().nextInt(10) + 10;
        this.inicio = 0;
    }
    
    private void preencherCampos(){
        this.labelA.setText("Programa A");
        this.labelB.setText("Programa B");
        this.labelC.setText("Programa C");
        this.labelD.setText("Programa D");
        this.btEscalonar.setText("Escalonar");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btEscalonar = new javax.swing.JButton();
        labelA = new javax.swing.JLabel();
        labelB = new javax.swing.JLabel();
        labelC = new javax.swing.JLabel();
        labelD = new javax.swing.JLabel();
        barrinhaA = new javax.swing.JProgressBar();
        barrinhaB = new javax.swing.JProgressBar();
        barrinhaC = new javax.swing.JProgressBar();
        test = new javax.swing.JProgressBar();
        barrinhaA1 = new javax.swing.JLabel();
        barrinhaD1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btEscalonar.setText("Precione");
        btEscalonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEscalonarActionPerformed(evt);
            }
        });
        jPanel1.add(btEscalonar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, -1, 40));

        labelA.setText("a");
        jPanel1.add(labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, 20));

        labelB.setText("a");
        jPanel1.add(labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 80, 20));

        labelC.setText("a");
        jPanel1.add(labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 80, 20));

        labelD.setText("a");
        jPanel1.add(labelD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 80, 20));

        barrinhaA.setStringPainted(true);
        jPanel1.add(barrinhaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 300, 20));

        barrinhaB.setStringPainted(true);
        jPanel1.add(barrinhaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 300, 20));

        barrinhaC.setStringPainted(true);
        jPanel1.add(barrinhaC, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 300, 20));

        test.setStringPainted(true);
        jPanel1.add(test, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 300, 20));

        barrinhaA1.setText("|");
        jPanel1.add(barrinhaA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 300, 20));

        barrinhaD1.setStringPainted(true);
        jPanel1.add(barrinhaD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 300, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEscalonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEscalonarActionPerformed
        new Thread(()->{
            
            System.out.println("Quantum: " + quantum);
        while(this.N != 0){
            this.bufferExecutando = this.est.bufferProntos.get(this.inicio);
            
            System.out.println("Processo: "+this.bufferExecutando.getNome()+"\tTempo: "+this.bufferExecutando.getTempo());
            
            this.bufferExecutando.setTempo(this.bufferExecutando.getTempo() - this.quantum);
            
            barraDeProgresso(this.bufferExecutando, this.bufferExecutando.getCont() + quantum);
            
            if(this.bufferExecutando.getTempo() <= 0){
                est.bufferProntos.remove(this.bufferExecutando);
                est.bufferFinalizados.add(this.bufferExecutando);
                inicio--;
                N--;
            }
            
            this.inicio++;
            this.inicio = circular(this.inicio);
            if(this.inicio == 0){
                System.out.println("");
            }
        }
        }).start();
        
        
    }//GEN-LAST:event_btEscalonarActionPerformed

    public void barraDeProgresso(Processo p, int timer){
      
        while(p.getCont() != timer && p.getCont() != p.getTempo()){

        p.getBar().setValue(p.getCont());
        try {
            Thread.sleep(100);
        } catch (InterruptedException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(p.getCont());
        p.setCont(p.getCont()+1);
    }

        
    }
    
    public int circular(int inicio){
        if(inicio > this.N-1){
            return 0;
        }else{
            return inicio;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barrinhaA;
    private javax.swing.JLabel barrinhaA1;
    private javax.swing.JProgressBar barrinhaB;
    private javax.swing.JProgressBar barrinhaC;
    private javax.swing.JProgressBar barrinhaD1;
    private javax.swing.JButton btEscalonar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelA;
    private javax.swing.JLabel labelB;
    private javax.swing.JLabel labelC;
    private javax.swing.JLabel labelD;
    private javax.swing.JProgressBar test;
    // End of variables declaration//GEN-END:variables
}
